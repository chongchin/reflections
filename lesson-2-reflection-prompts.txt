What happens when you initialize a repository? Why do you need to do it?
1) A hidden directory, .git is created
2) It is used by GIT for version control

How is the staging area different from the working directory and the repository?
What value do you think it offers?

1) The staging area is part of the repository. It keeps track of files that have been added but not commmitted\
2) Value is there is an intermediate stage before commit and can be reverse
3) I think the working directory is the root, that is, the folder containing name of the app


How can you use the staging area to make sure you have one commit per logical
change?
1) The staging area encourages me to commit in smaller sizes of logical change
2) I can use git diff --staging to compare the stage version with the latest commit
3) I can also use git diff to compare the staging version and the version in my working directory


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
